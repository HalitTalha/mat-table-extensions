{"version":3,"file":"mat-table-filter.umd.js","sources":["ng://mat-table-filter/lib/mat-table-filter.enum.ts","ng://mat-table-filter/lib/mat-table-filter.service.ts","ng://mat-table-filter/lib/mat-table-filter.directive.ts","ng://mat-table-filter/lib/mat-table-filter.module.ts"],"sourcesContent":["export enum MatTableFilter {\n  EQUALS = 'EQUALS',\n  ANYWHERE = 'ANYWHERE',\n  STARTS_WITH = 'STARTS_WITH',\n  ENDS_WITH = 'ENDS_WITH'\n}\n","import { Injectable } from '@angular/core';\nimport { MatTableFilter } from './mat-table-filter.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatTableFilterService {\n  constructor() {}\n\n  public filterPredicate(exampleEntity: any, item: any, filterType: MatTableFilter, caseSensitive: boolean): boolean {\n    const exampleEntityObjectKeys = Object.keys(exampleEntity);\n    for (let i = 0; i < exampleEntityObjectKeys.length; i++) {\n      const exampleColumn = exampleEntityObjectKeys[i];\n      const exampleColumnValue = exampleEntity[exampleColumn];\n      const itemColumnValue = item[exampleColumn];\n      if (!exampleColumnValue || exampleColumnValue instanceof Array) {\n        // if example entity's property is undefined/null/empty then it means the caller wants all the data\n        // also if there is an array property we are skipping\n        continue;\n      }\n      if (itemColumnValue) {\n        // if example entity has additional columns then search fails\n        if (this.isAlphaNumeric(itemColumnValue)) {\n          if (!this.filterPredicateAlphaNumeric(exampleColumnValue, itemColumnValue, filterType, caseSensitive)) {\n            return false;\n          }\n        } else if (this.isBoolean(itemColumnValue)) {\n          if (itemColumnValue !== exampleColumnValue) {\n            return false;\n          }\n        } else {\n          if (!this.filterPredicate(exampleColumnValue, itemColumnValue, filterType, caseSensitive)) {\n            // if one of the inner properties returns true, this shouldnt affect the whole item's filtering\n            // however if it returns false then the item must not be in the list\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private filterPredicateAlphaNumeric(\n    exampleColumnValue: number | string,\n    itemColumnValue: number | string,\n    filterType: MatTableFilter,\n    caseSensitive: boolean\n  ): boolean {\n    let exampleString = exampleColumnValue.toString();\n    let itemString = itemColumnValue.toString();\n    if (!caseSensitive) {\n      exampleString = exampleString.toUpperCase();\n      itemString = itemString.toUpperCase();\n    }\n    let result = true;\n    switch (filterType) {\n      case MatTableFilter.EQUALS:\n        if (exampleColumnValue !== itemColumnValue) {\n          result = false;\n        }\n        break;\n      case MatTableFilter.ANYWHERE:\n        if (!itemString.includes(exampleString)) {\n          result = false;\n        }\n        break;\n      case MatTableFilter.STARTS_WITH:\n        if (!itemString.startsWith(exampleString)) {\n          result = false;\n        }\n        break;\n      case MatTableFilter.ENDS_WITH:\n        if (!itemString.endsWith(exampleString)) {\n          result = false;\n        }\n        break;\n      default:\n        break;\n    }\n    return result;\n  }\n\n  private isAlphaNumeric(value: any) {\n    return typeof value === 'string' || typeof value === 'number';\n  }\n\n  private isBoolean(value: any) {\n    return typeof value === 'boolean';\n  }\n}\n","import { Directive, DoCheck, Input, ViewContainerRef, Host, Self, Optional } from '@angular/core';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { MatTableFilter } from './mat-table-filter.enum';\nimport { MatTableFilterService } from './mat-table-filter.service';\nimport * as LODASH from 'lodash';\n@Directive({\n  selector: '[matTableFilter]',\n  exportAs: 'matTableFilter'\n})\nexport class MatTableFilterDirective implements DoCheck {\n\n  private _oldExampleEntity: any;\n\n  @Input() exampleEntity: any;\n\n  /**\n   * in millis\n   */\n  private _table: any;\n  @Input() debounceTime = 400;\n  @Input() filterType: MatTableFilter = MatTableFilter.ANYWHERE;\n  @Input() caseSensitive = false;\n\n  private _exampleEntitySubject: BehaviorSubject<void>;\n\n\n  constructor(private _filterService: MatTableFilterService,\n              @Host() @Self() @Optional() private _injectedTable: MatTable<any>,\n              private _viewContainerRef: ViewContainerRef) {\n              this.initCdkTable();\n              this.initDebounceSubject();\n  }\n\n  ngDoCheck(): void {\n    if (this.isExampleEntityChanged()) {\n      this._oldExampleEntity = this.toPlainJson(this.exampleEntity);\n      this._exampleEntitySubject.next();\n    }\n  }\n\n  private isExampleEntityChanged(): boolean {\n    return !LODASH.isEqual(this._oldExampleEntity, this.toPlainJson(this.exampleEntity));\n  }\n\n  private toPlainJson(object: any): JSON {\n    if (object) {\n      return JSON.parse(JSON.stringify(object));\n    } else {\n      return undefined;\n    }\n  }\n\n  private initCdkTable() {\n    // tslint:disable-next-line:no-string-literal\n    const table = this._viewContainerRef['_data'].componentView.component;\n    if (table) {\n      this._table = table;\n    } else if (this._injectedTable) {\n      this._table = this._injectedTable;\n    } else {\n      throw new Error('Unsupported Angular version');\n    }\n  }\n\n  private initDebounceSubject() {\n    this._exampleEntitySubject = new BehaviorSubject<void>(null);\n    this._exampleEntitySubject.pipe(\n     debounceTime(this.debounceTime))\n     .subscribe(_ => {\n       this.updateFilterPredicate();\n     });\n  }\n\n  private updateFilterPredicate() {\n    const matDataSource = this.getMatDataSource();\n    if (matDataSource) {\n      const _this = this;\n      matDataSource.filterPredicate = (data): boolean => {\n        return _this._filterService.filterPredicate(_this.exampleEntity, data, _this.filterType, _this.caseSensitive);\n      }\n      matDataSource.filter = this.exampleEntity as any;\n    }\n\n  }\n\n  private getMatDataSource(): MatTableDataSource<any> {\n    const matTable = this._table as MatTable<any>;\n    return (matTable.dataSource as MatTableDataSource<any>);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTableFilterDirective } from './mat-table-filter.directive';\n\n@NgModule({\n  declarations: [MatTableFilterDirective],\n  imports: [\n    MatTableModule\n  ],\n  exports: [MatTableFilterDirective]\n})\nexport class MatTableFilterModule { }\n"],"names":["Injectable","LODASH.isEqual","BehaviorSubject","debounceTime","Directive","MatTable","Host","Self","Optional","ViewContainerRef","Input","NgModule","MatTableModule"],"mappings":"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"}